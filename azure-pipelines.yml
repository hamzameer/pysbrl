# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
      include:
        - master
        - dev

jobs:

- job: macos
  pool: 
    vmImage: 'macOS-10.13'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      brew install gsl gmp
    displayName: 'Brew install dependencies'
  - script: |
      pip install --upgrade pip 
      pip install setuptools wheel twine
      pip install -r dev-requirements.txt
      pip install -r test-requirements.txt
    displayName: 'Install dependencies'
  - script: |
      python setup.py sdist bdist_wheel
    displayName: 'Build'
  - script: |
      python setup.py install
    displayName: 'Install'
  - script: |
      pip install pytest pytest-azurepipelines
      pytest
    displayName: 'pytest'
  - task: TwineAuthenticate@1
    inputs:
      artifactFeed: 'Twine'
  - script: |
      python -m twine upload -r Twine --config-file $(PYPIRC_PATH) dist/*.whl
    displayName: Deploy to Azure Artifacts
    continueOnError: true
  - task: TwineAuthenticate@1
    inputs:
      pythonUploadServiceConnection: 'pypitest'
  - script: |
      echo $(PYPIRC_PATH)
      cat $(PYPIRC_PATH)
      python -m twine upload -r pypitest --config-file $(PYPIRC_PATH) dist/*.whl
    displayName: Deploy to PyPI Test
